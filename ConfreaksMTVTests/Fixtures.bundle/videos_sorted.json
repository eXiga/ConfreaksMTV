[
 {"id":759,"title":"Keynote: Architecture the Lost Years","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/000/759/759-rubymidwest2011-keynote-architecture-the-lost-years-thumb_0001-original.png?1422311908","slug":"rubymidwest2011-keynote-architecture-the-lost-years","recorded_at":"2011-11-04T23:15:00.000Z","event":"Ruby Midwest 2011","rating":"Everyone","abstract":"Robert C. Martin (Uncle Bob) has been a software professional since 1970. In the last 40 years, he has worked in various capacities on literally hundreds of software projects. He has authored \"landmark\" books on Agile Programming, Extreme Programming, UML, Object-Oriented Programming, C++ Programming and Clean Code. He has published dozens of articles in various trade journals. Today, he is one of the software industry's leading authorities on Agile software development and is a regular speaker at international conferences and trade shows. He is a former editor of the C++ Report and writes regular blogs at http://cleancoder.posterous.com/.","post_date":null,"announce_date":null,"host":"youtube","embed_code":"hALFGQNeEnU","views":70971,"views_last_7":316,"views_last_30":1253,"license":"cc-by-sa-3.0","attribution":"","presenters":[{"first_name":"Robert","last_name":"Martin","aka_name":"","twitter_handle":""}]},{"id":1287,"title":"Y Not -- Adventures in Functional Programming","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/001/287/1287-rubyconf2012-y-not-adventures-in-functional-programming-thumb_0004-original.png?1422314013","slug":"rubyconf2012-y-not-adventures-in-functional-programming","recorded_at":"2012-11-02T16:20:00.000Z","event":"Ruby Conference 2012","rating":"Everyone","abstract":"One of the deepest mysteries in the functional programming world is the Y-Combinator. Many have heard of it, but few have mastered its mysteries. Although fairly useless in real world software, understanding how the Y-Combinator works and why it is important gives the student an important insight into the nature of functional programming.\r\n\r\nJoin with us on this journey of understanding. Be prepared to curry your functions and bind your lambdas as we delve into the whys and wherefores of this paragon of functional programming. Although you will probably never have a need for the combinator, the effort put forth to understand it will improve your functional programming chops. This talk is not for the faint of heart, but the successful student will be richly rewarded.\r\n\r\nAlso, you will understand why \"Y-Combinator\" is the perfect name for Paul Graham's start-up funding company.","post_date":"2012-11-10T08:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"FITJMJjASUs","views":70408,"views_last_7":62,"views_last_30":283,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Jim","last_name":"Weirich","aka_name":"","twitter_handle":"jimweirich"}]},{"id":282,"title":"Real Software Engineering","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/000/282/glenn-vanderburg-smaller.mp4_snapshot_03.00__2010.08.31_03.50.52_-original.jpg?1422384771","slug":"lsrc2010-real-software-engineering","recorded_at":"2010-08-26T16:30:00.000Z","event":"Lone Star Ruby Conference 2010","rating":"Everyone","abstract":"Software engineering as it's taught in universities simply doesn't work. It doesn't produce software systems of high quality, and it doesn't produce them for low cost. Sometimes, even when practiced rigorously, it doesn't produce systems at all.\r\n\r\nThat's odd, because in every other field, the term \"engineering\"¬ù is reserved for methods that work.\r\n\r\nWhat then, does real software engineering look like? How can we consistently deliver high-quality systems to our customers and employers in a timely fashion and for a reasonable cost? In this session, we'll discuss where software engineering went wrong, and build the case that disciplined Agile methods, far from being \"anti-engineering\" (as they are often described), actually represent the best of engineering principles applied to the task of software development.\r\n","post_date":"2010-08-31T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"_EWUeZoyB0k","views":64687,"views_last_7":58,"views_last_30":333,"license":"cc-by-sa-3.0","attribution":"","presenters":[{"first_name":"Glenn","last_name":"Vanderburg","aka_name":"","twitter_handle":"glv"}]},{"id":2343,"title":"Trolls of 2013","image":"http://s3-us-west-2.amazonaws.com/confreaks-tv3/production/videos/images/000/002/343/2343-mwrc2013-trolls-of-2013-thumb_0000-original.png?1422324349","slug":"mwrc2013-trolls-of-2013","recorded_at":"2013-04-04T23:15:00.000Z","event":"MountainWest RubyConf 2013","rating":"Everyone","abstract":null,"post_date":"2013-04-29T07:00:00.000Z","announce_date":null,"host":"youtube","embed_code":"r1JMxJ06I98","views":51394,"views_last_7":8,"views_last_30":60,"license":"cc-by-sa-3.0","attribution":null,"presenters":[{"first_name":"Ryan","last_name":"Davis","aka_name":"","twitter_handle":"the_zenspider"}]}
 ]